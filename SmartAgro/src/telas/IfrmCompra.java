package telas;

import apoio.*;
import java.util.ArrayList;
import dao.GenericDAO;
import entidade.Formapagamento;
import entidade.Compra;
import entidade.Itemcompra;
import entidade.ItemcompraPK;
import entidade.Produto;
import java.math.BigDecimal;
import java.math.RoundingMode;
import javax.swing.JComponent;
import javax.swing.event.ChangeEvent;
import org.apache.log4j.Logger;
import smartagro.VerificaPermissao;

public class IfrmCompra extends javax.swing.JInternalFrame {

    private GenericDAO dao;
    private Compra compra;
    private Produto produto;
    private ArrayList<Itemcompra> itens;
    private jtmItensCompra modelItens;
    private DlgProdutos dlgProdutos;
    private jtmCompra modelCompra;
    private DlgFornecedores dlgFornecedores;
    private DlgColaboradores dlgColaboradores;
    private ArrayList<Compra> compras;
    private VerificaPermissao permissoes;
    private boolean editando = false;
    private boolean editandoItem = false;

    private static final Logger logger = Logger.getLogger(IfrmCompra.class);

    /**
     * Creates new form IfrmVenda
     */
    public IfrmCompra(int aba) {
        
        initComponents();

        // Abre na aba passada por parametro
        tabAbas.setSelectedIndex(aba);
        
        // Ajusta os botões conforme as permissões
        permissoes = new VerificaPermissao(this.getClass().getSimpleName(), this.getContentPane());
        tabAbasStateChanged(new ChangeEvent(tabAbas));

        // Preenche a tabela de consulta com as colunas corretas
        itens = new ArrayList();
        modelItens = new jtmItensCompra(itens);
        tblItens.setModel(modelItens);

        compras = new ArrayList();

        modelCompra = new jtmCompra(compras);
        tblCompras.setModel(modelCompra);

        dlgFornecedores = new DlgFornecedores(null, true);
        dlgColaboradores = new DlgColaboradores(null, true);
        dlgProdutos = new DlgProdutos(null, true);
        popularComboStatus();

        focus();
    }

    private void focus() {
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                // Seta a aba de cadastro como a selecionada
                tabAbas.setSelectedIndex(0);
                tabAbasStateChanged(new ChangeEvent(tabAbas));
                cbmStatus.requestFocusInWindow();
            }
        });
    }

    private void popularComboStatus() {
        cbmStatus.removeAllItems();
        cbmStatus.addItem("Selecione");

        for (Object st : new Compra().getTodosStatus()) {
            cbmStatus.addItem(st.toString());
        }

        cbmStatus.setSelectedIndex(0);
    }

    private void limparPainelCadastro() {
        LimpaCampos.limparCampos(pnlCabecalho);
        LimpaCampos.limparCampos(pnlItens);
        LimpaCampos.limparCampos(pnlComplemento);
        
        this.modelItens = new jtmItensCompra(new ArrayList<Itemcompra>());
        tblItens.setModel(this.modelItens);

        atualizaSubtotal();
        atualizaTotal();
    }

    private boolean getEditando() {
        return editando;
    }

    private void setEditando(boolean editando) {
        this.editando = editando;
        
        HabilitaCampos.controlaBotaoSalvar(editando, btnSalvar, permissoes);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgPaga = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        btnEditar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        tabAbas = new javax.swing.JTabbedPane();
        pnlCadastro = new javax.swing.JPanel();
        pnlCabecalho = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfdCompra = new javax.swing.JTextField();
        tfdFornecedor = new javax.swing.JTextField();
        btnZoomFornecedor = new javax.swing.JButton();
        btnZoomComprador = new javax.swing.JButton();
        tfdComprador = new javax.swing.JTextField();
        ffdData = new javax.swing.JFormattedTextField(Formatacao.getDataAtual());
        cbmStatus = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        rbtPagaSim = new javax.swing.JRadioButton();
        rbtPagaNao = new javax.swing.JRadioButton();
        pnlItens = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tfdProduto = new javax.swing.JTextField();
        btnZoomProduto = new javax.swing.JButton();
        tfdPrecoUn = new apoio.MoedaFormatada();
        tfdDescontoUn = new apoio.MoedaFormatada();
        tfdSubtotal = new apoio.MoedaFormatada();
        ffdQuantidade = new javax.swing.JFormattedTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblItens = new javax.swing.JTable();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        tfdCodigoPro = new javax.swing.JTextField();
        pnlComplemento = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tfdDesconto = new apoio.MoedaFormatada();
        tfdDescrDesc = new javax.swing.JTextField();
        tfdObservacao = new javax.swing.JTextField();
        brnPagamento = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        lblTotalLiquido = new javax.swing.JLabel();
        pnlConsulta = new javax.swing.JPanel();
        btnPesquisar = new javax.swing.JButton();
        jYTableScrollPane1 = new de.javasoft.swing.JYTableScrollPane();
        tblCompras = new de.javasoft.swing.JYTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Compra");

        btnEditar.setText("Editar");
        btnEditar.setName("btnEditar"); // NOI18N
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.setName("btnSalvar"); // NOI18N
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Cancelar");
        btnExcluir.setName("btnExcluir"); // NOI18N
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        tabAbas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabAbasStateChanged(evt);
            }
        });
        tabAbas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tabAbasFocusLost(evt);
            }
        });

        pnlCadastro.setName("pnlCadastro"); // NOI18N

        pnlCabecalho.setBorder(javax.swing.BorderFactory.createTitledBorder("Cabeçalho"));

        jLabel2.setText("Compra");

        jLabel3.setText("Fornecedor *");

        jLabel4.setText("Comprador  *");

        jLabel5.setText("Data emissão");

        jLabel6.setText("Status");

        tfdCompra.setEditable(false);

        tfdFornecedor.setEditable(false);

        btnZoomFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/zoom.png"))); // NOI18N
        btnZoomFornecedor.setToolTipText("Pesquisar");
        btnZoomFornecedor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnZoomFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZoomFornecedorActionPerformed(evt);
            }
        });

        btnZoomComprador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/zoom.png"))); // NOI18N
        btnZoomComprador.setToolTipText("Pesquisar");
        btnZoomComprador.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnZoomComprador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZoomCompradorActionPerformed(evt);
            }
        });

        tfdComprador.setEditable(false);

        ffdData.setEditable(false);

        cbmStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));

        jLabel15.setText("Paga");

        btgPaga.add(rbtPagaSim);
        rbtPagaSim.setText("Sim");
        rbtPagaSim.setEnabled(false);

        btgPaga.add(rbtPagaNao);
        rbtPagaNao.setText("Não");
        rbtPagaNao.setEnabled(false);

        javax.swing.GroupLayout pnlCabecalhoLayout = new javax.swing.GroupLayout(pnlCabecalho);
        pnlCabecalho.setLayout(pnlCabecalhoLayout);
        pnlCabecalhoLayout.setHorizontalGroup(
            pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                        .addComponent(tfdFornecedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnZoomFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdComprador, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnZoomComprador, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                        .addComponent(tfdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ffdData, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbmStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtPagaSim)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtPagaNao)
                        .addGap(0, 352, Short.MAX_VALUE))))
        );
        pnlCabecalhoLayout.setVerticalGroup(
            pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(tfdCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ffdData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbmStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(rbtPagaSim)
                    .addComponent(rbtPagaNao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(tfdFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnZoomFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfdComprador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(btnZoomComprador, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlItens.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens"));

        jLabel7.setText("Produto *");

        jLabel8.setText("Desconto");

        jLabel9.setText("Quantidade *");

        jLabel10.setText("Subtotal");

        jLabel11.setText("Preço *");

        tfdProduto.setEditable(false);

        btnZoomProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/zoom.png"))); // NOI18N
        btnZoomProduto.setToolTipText("Pesquisar");
        btnZoomProduto.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnZoomProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZoomProdutoActionPerformed(evt);
            }
        });

        tfdPrecoUn.setEditable(false);
        tfdPrecoUn.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        tfdDescontoUn.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfdDescontoUn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfdDescontoUnFocusLost(evt);
            }
        });

        tfdSubtotal.setEditable(false);
        tfdSubtotal.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        ffdQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ffdQuantidadeFocusLost(evt);
            }
        });

        tblItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblItens);

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnEdit.setText("Editar");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        tfdCodigoPro.setEditable(false);
        tfdCodigoPro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfdCodigoProFocusLost(evt);
            }
        });

        javax.swing.GroupLayout pnlItensLayout = new javax.swing.GroupLayout(pnlItens);
        pnlItens.setLayout(pnlItensLayout);
        pnlItensLayout.setHorizontalGroup(
            pnlItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlItensLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlItensLayout.createSequentialGroup()
                        .addGroup(pnlItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfdPrecoUn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfdCodigoPro, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlItensLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ffdQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfdDescontoUn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfdSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlItensLayout.createSequentialGroup()
                                .addComponent(tfdProduto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnZoomProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemover))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        pnlItensLayout.setVerticalGroup(
            pnlItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlItensLayout.createSequentialGroup()
                .addGroup(pnlItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(tfdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfdCodigoPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnZoomProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlItensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tfdPrecoUn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(tfdDescontoUn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ffdQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(tfdSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnRemover)
                    .addComponent(btnEdit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlComplemento.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados complementares"));

        jLabel12.setText("Desconto");

        jLabel13.setText("Descrição desconto");

        jLabel14.setText("Observação");

        tfdDesconto.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfdDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfdDescontoFocusLost(evt);
            }
        });

        brnPagamento.setText("Condição de pagamento");

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal.setText("Total");

        lblTotalLiquido.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblTotalLiquido.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotalLiquido.setText("Total Líquido");

        javax.swing.GroupLayout pnlComplementoLayout = new javax.swing.GroupLayout(pnlComplemento);
        pnlComplemento.setLayout(pnlComplementoLayout);
        pnlComplementoLayout.setHorizontalGroup(
            pnlComplementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComplementoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlComplementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlComplementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlComplementoLayout.createSequentialGroup()
                        .addComponent(tfdDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdDescrDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfdObservacao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(brnPagamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlComplementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTotalLiquido, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlComplementoLayout.setVerticalGroup(
            pnlComplementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComplementoLayout.createSequentialGroup()
                .addGroup(pnlComplementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(brnPagamento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlComplementoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlComplementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlComplementoLayout.createSequentialGroup()
                                .addGroup(pnlComplementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(tfdDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfdDescrDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlComplementoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(tfdObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlComplementoLayout.createSequentialGroup()
                                .addComponent(lblTotal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTotalLiquido)))))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlCadastroLayout = new javax.swing.GroupLayout(pnlCadastro);
        pnlCadastro.setLayout(pnlCadastroLayout);
        pnlCadastroLayout.setHorizontalGroup(
            pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlItens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCabecalho, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlComplemento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlCadastroLayout.setVerticalGroup(
            pnlCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCabecalho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabAbas.addTab("Cadastro", pnlCadastro);

        pnlConsulta.setName("pnlConsulta"); // NOI18N

        btnPesquisar.setText("Carregar Dados");
        btnPesquisar.setName("btnPesquisar"); // NOI18N
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        tblCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jYTableScrollPane1.setViewportView(tblCompras);

        javax.swing.GroupLayout pnlConsultaLayout = new javax.swing.GroupLayout(pnlConsulta);
        pnlConsulta.setLayout(pnlConsultaLayout);
        pnlConsultaLayout.setHorizontalGroup(
            pnlConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultaLayout.createSequentialGroup()
                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 873, Short.MAX_VALUE))
            .addComponent(jYTableScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1145, Short.MAX_VALUE)
        );
        pnlConsultaLayout.setVerticalGroup(
            pnlConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jYTableScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabAbas.addTab("Consulta", pnlConsulta);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar)
                .addContainerGap())
            .addComponent(tabAbas)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabAbas, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir))
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("Venda");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabAbasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabAbasStateChanged
        HabilitaCampos.controlaBotoes(evt.getSource(), permissoes, btnSalvar, btnEditar, btnExcluir);
    }//GEN-LAST:event_tabAbasStateChanged

    private void tabAbasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabAbasFocusLost
        HabilitaCampos.controlaPainelCadastro(evt, editando);
    }//GEN-LAST:event_tabAbasFocusLost

    private void btnZoomFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZoomFornecedorActionPerformed
        dlgFornecedores.setVisible(true);
        if (dlgFornecedores.getFornecedor() != null) {
            tfdFornecedor.setText(dlgFornecedores.getFornecedorToString());
        }
    }//GEN-LAST:event_btnZoomFornecedorActionPerformed

    private void btnZoomCompradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZoomCompradorActionPerformed
        dlgColaboradores.setVisible(true);
        if (dlgColaboradores.getColaborador() != null) {
            tfdComprador.setText(dlgColaboradores.getColaboradorToString());
        }
    }//GEN-LAST:event_btnZoomCompradorActionPerformed

    private void btnZoomProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZoomProdutoActionPerformed

        dlgProdutos.setVisible(true);

        if (dlgProdutos.getProduto() != null) {
            tfdProduto.setText(dlgProdutos.getProdutoToString());
            tfdCodigoPro.setText(dlgProdutos.getProduto().getId() + "");
            produto = dlgProdutos.getProduto();
            tfdPrecoUn.setText(produto.getValorcompra() + "");
        }

    }//GEN-LAST:event_btnZoomProdutoActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed

        Itemcompra item = new Itemcompra();
        ItemcompraPK pk = new ItemcompraPK();

        if (getEditandoItem()) {
            item = retornaItemSelecionado();
            pk = item.getItemcompraPK();
        }

        pk.setProduto(this.produto);

        BigDecimal qtd = Formatacao.converteStringParaBigDecimal(ffdQuantidade.getText());
        item.setDesconto(tfdDescontoUn.getValue().setScale(2));
        item.setQuantidade(qtd);
        item.setValor(tfdPrecoUn.getValue().setScale(2));
        item.setValortotal(tfdSubtotal.getValue().setScale(2));
        item.setCompra(compra);
        item.setItemcompraPK(pk);

        // Valida o produto
        if (!validaItem(item) || !validaItens()) {
            tfdCodigoPro.requestFocus();
            return;
        }

        if (getEditandoItem()) {
            modelItens.setRow(item, tblItens.getSelectedRow());
        } else {
            modelItens.addRow(item);
        }

        atualizaTabelaItens();

        setEditandoItem(false);
        limparDadosItem();
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        setEditandoItem(false);

        if (tblItens.getSelectedRow() >= 0) {
            Itemcompra item = retornaItemSelecionado();

            tfdCodigoPro.setText(item.getItemcompraPK().getProduto().getCodigo());
            tfdProduto.setText(item.getItemcompraPK().getProduto().getDescricao());
            tfdPrecoUn.setText(item.getValor().setScale(2).toString());
            ffdQuantidade.setText(item.getQuantidade().toString());
            tfdDescontoUn.setText(item.getDesconto().setScale(2).toString());
            tfdSubtotal.setText(item.getValortotal().setScale(2).toString());

            setEditandoItem(true);

            tfdCodigoPro.requestFocus();
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        if (tblItens.getSelectedRow() >= 0) {
            modelItens.removeRow(tblItens.getSelectedRow());
            atualizaTabelaItens();
            tblItens.requestFocus();
        }

        setEditandoItem(false);
        limparDadosItem();
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void tfdCodigoProFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdCodigoProFocusLost
        if (!tfdCodigoPro.getText().trim().isEmpty()) {

            // Se esta editando o item, não carrega os dados do cadsatro
            if (editandoItem
                    && tfdCodigoPro.getText().equals(retornaItemSelecionado().getItemcompraPK().getProduto().getCodigo())) {
                return;
            }

            ArrayList<Produto> produtos = new GenericDAO().consultarComCriterio("Produto", "codigo", tfdCodigoPro.getText());

            if (produtos.size() > 0) {
                // Considera o primeiro produto encontrado
                produto = produtos.get(0);
                tfdProduto.setText(produto.getDescricao());
                tfdPrecoUn.setText(produto.getValorvenda().setScale(2).toString());
                atualizaSubtotal();
            }
        }
    }//GEN-LAST:event_tfdCodigoProFocusLost

    private void setEditandoItem(boolean editando) {
        editandoItem = editando;
    }

    private boolean getEditandoItem() {
        return editandoItem;
    }

    private void limparDadosItem() {
        tfdCodigoPro.setText("");
        tfdProduto.setText("");
        tfdPrecoUn.setText("");
        ffdQuantidade.setText("");
        tfdDescontoUn.setText("");
        tfdSubtotal.setText("");
    }

    private Itemcompra retornaItemSelecionado() {
        Itemcompra item = new Itemcompra();

        if (tblItens.getSelectedRow() >= 0) {
            item = modelItens.get(tblItens.getSelectedRow());
        }

        return item;
    }

    private void atualizaTabelaItens() {
        tblItens.setModel(modelItens);
        atualizaTotal();
    }

    private void atualizaSubtotal() {
        try {
            BigDecimal qtd = Formatacao.converteStringParaBigDecimal(ffdQuantidade.getText());
            BigDecimal desc = tfdDescontoUn.getValue();
            BigDecimal preco = tfdPrecoUn.getValue();

            BigDecimal sub = BigDecimal.ZERO;

            if (qtd.intValue() > 0) {
                preco = preco.subtract(desc);
                sub = preco.multiply(qtd);
            }

            tfdSubtotal.setText(sub.setScale(2).toString());
        } catch (Exception e) {
        }
    }

    private void atualizaTotal() {
        BigDecimal total = BigDecimal.ZERO;

        total = getTotal();
        lblTotal.setText("Total R$ " + total.setScale(2, RoundingMode.HALF_DOWN));

        total = getTotalLiquido();
        lblTotalLiquido.setText("Total Líquido R$ " + total.setScale(2, RoundingMode.HALF_DOWN));
    }

    private BigDecimal getTotal() {
        BigDecimal total = BigDecimal.ZERO;

        if (modelItens.getRowCount() > 0) {
            for (int i = 0; i < modelItens.getRowCount(); i++) {
                total = total.add(modelItens.get(i).getValortotal());
            }
        }

        return total;
    }

    private BigDecimal getTotalLiquido() {
        BigDecimal total = getTotal();

        if (tfdDesconto.getValue().intValue() > 0) {
            total = total.subtract(tfdDesconto.getValue());
        }

        return total;
    }

    private void ffdQuantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ffdQuantidadeFocusLost
        atualizaSubtotal();
    }//GEN-LAST:event_ffdQuantidadeFocusLost

    private void tfdDescontoUnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdDescontoUnFocusLost
        atualizaSubtotal();
    }//GEN-LAST:event_tfdDescontoUnFocusLost

    private boolean validaItens() {
        boolean inputOK = true;

        for (int i = 0; i < modelItens.getRowCount(); i++) {

            if (!validaItem(modelItens.get(i))) {
                inputOK = false;
                break;
            }

            // Valida produtos duplicados
            for (int j = 0; j < modelItens.getRowCount(); j++) {
                if (i != j) {
                    if (modelItens.get(i).getItemcompraPK().getProduto().getId() == modelItens.get(j).getItemcompraPK().getProduto().getId()) {
                        Mensagem.mostraAletra("Atenção", "Produto informado mais de uma vez \n Produto: " + modelItens.get(i).getItemcompraPK().getProduto().getCodigo());
                        inputOK = false;
                        break;
                    }
                }
            }

            if (!inputOK) {
                break;
            }
        }

        return inputOK;
    }

    private boolean validaItem(Itemcompra item) {
        boolean inputOK = true;

        while (inputOK) {
            // Valida quantidade
            if (item.getQuantidade() == null || item.getQuantidade().doubleValue() <= 0) {
                Mensagem.mostraAletra("Atenção", "Informe uma quantidade válida \n Produto: " + item.getItemcompraPK().getProduto().getCodigo());
                inputOK = false;
                break;
            }

            // Valida o desconto
            if (item.getDesconto().doubleValue() > item.getValor().doubleValue()) {
                Mensagem.mostraAletra("Atenção", "Desconto do produto inválido \n Produto: " + item.getItemcompraPK().getProduto().getCodigo());
                inputOK = false;
                break;
            }

            // Valida valor
            if (item.getValortotal().doubleValue() < 0) {
                Mensagem.mostraAletra("Atenção", "Valor do produto inválido \n Produto: " + item.getItemcompraPK().getProduto().getCodigo());
                inputOK = false;
                break;
            }

            break;
        }

        return inputOK;
    }

    private boolean validaPedido() {
        boolean inputOK = true;

        while (inputOK) {
            if (modelItens.getRowCount() == 0) {
                Mensagem.mostraAletra("Atenção", "Informe os itens da venda");
                inputOK = false;
                break;
            }

            if (getTotalLiquido().doubleValue() < 0) {
                Mensagem.mostraAletra("Atenção", "Valor do pedido inválido");
                inputOK = false;
                break;
            }

            boolean itensValidos = validaItens();

            if (!itensValidos) {
                inputOK = false;
                break;
            }

            break;
        }

        return inputOK;
    }

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        JComponent[] components = new JComponent[]{cbmStatus, tfdFornecedor, tfdComprador};
        VerificadorCampos verifier = new VerificadorCampos(components);

        if (!verifier.validaCampos()) {
            return;
        }

        if (!validaPedido()) {
            return;
        }

        this.dao = new GenericDAO<>();

        // Dados da compra
        if (getEditando()) {
            compra.setPago(compra.getPago());
        } else {
            this.compra = new Compra();
            compra.setData(new java.util.Date());
            compra.setHora(new java.util.Date());
            compra.setPago(false);
        }

        if (dlgFornecedores.getFornecedor() != null) {
            compra.setFornecedor(dlgFornecedores.getFornecedor());
        }

        if (dlgColaboradores.getColaborador() != null) {
            compra.setColaborador(dlgColaboradores.getColaborador());
        }

        compra.setStatus(Compra.getStatusPelaDescricao(cbmStatus.getSelectedItem().toString()));
        compra.setFormapagamento(new Formapagamento(1));
        compra.setValor(getTotal());
        compra.setValortotal(getTotalLiquido());
        compra.setDesconto(tfdDesconto.getValue().setScale(2));
        compra.setDescricaodesconto(tfdDescrDesc.getText());
        compra.setObservacao(tfdObservacao.getText());

        if (getEditando()) {
            compra.removeAllItemcompra();
        }

        // Itens da venda
        for (Itemcompra item : modelItens.getItens()) {
            // Atualiza a venda
            ItemcompraPK pk = new ItemcompraPK(item.getItemcompraPK().getProduto(), compra);
            item.setItemcompraPK(pk);
            // Adiciona aos itens
            compra.addItemcompra(item);
        }

        try {
            if (getEditando()) {
                if (!dao.atualizar(compra)) {
                    throw new Exception("Erro ao atualizar compra");
                }
                
                setEditando(false);
                
            } else {
                if (!dao.salvar(compra)) {
                    throw new Exception("Erro ao salvar compra");
                }
            }

            Mensagem.mostraInformacao("Sucesso", "Compra " + ((getEditando()) ? "atualizada" : "salva") + " com sucesso");

            limparPainelCadastro();

        } catch (Exception e) {
            Mensagem.mostraErro("Problema", "Problema ao " + ((getEditando()) ? "atualizar" : "salvar") + " compra");
            logger.error("Erro ao atualizar tabelas", e);
        }

        focus();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // Pega o código do registro para consultar o objeto
        int id = Integer.parseInt(tblCompras.getValueAt(tblCompras.getSelectedRow(), 0).toString());
        this.compra = (Compra) dao.consultarPorId(id, "Compra");

        //Abre uma mensagem pedindo se o usuário realmente quer excluír o registro
        boolean resposta = Mensagem.confirmaMensagem("Atenção", "Deseja realmente cancelar a compra: " + compra.getId() + "?");

        if (resposta) {
            // Atualiza a venda para Cancelada
            compra.setStatus(Compra.STATUS_CANCELADA);

            if (dao.atualizar(compra)) {
                Mensagem.mostraInformacao("Confirmação de exclusão", "Compra cancelada");

                this.compras = dao.consultarTodos("Compra");
                this.modelCompra = new jtmCompra(compras);
                this.tblCompras.setModel(modelCompra);
            } else {
                Mensagem.mostraErro("Problema", "Problema para cancelar compra");
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // Pega o código do registro para consultar o objeto
        int id = Integer.parseInt(tblCompras.getValueAt(tblCompras.getSelectedRow(), 0).toString());
        this.compra = (Compra) dao.consultarPorId(id, "Compra");

        limparPainelCadastro();

        // Pega os dados se existir objeto
        if (this.compra != null) {
            tfdCompra.setText(compra.getId().toString());
            ffdData.setValue(Formatacao.ajustaDataDMA(compra.getData().toString()));
            System.out.println(compra.getData().toString());
            cbmStatus.setSelectedItem(Compra.getDescricaoStatus(compra.getStatus()));

            rbtPagaSim.setSelected(compra.getPago());
            rbtPagaNao.setSelected(!compra.getPago());

            String colab;
            if (compra.getFornecedor().getCnpj() != null) {
                colab = compra.getFornecedor().getCnpj();
            } else {
                colab = compra.getFornecedor().getCpf();
            }
            colab = colab + " - " + compra.getFornecedor().getNome();
            tfdFornecedor.setText(colab);

            tfdComprador.setText(compra.getColaborador().getNomecompleto());
            tfdDesconto.setValue(compra.getDesconto());
            tfdDescrDesc.setText(compra.getDescricaodesconto());
            tfdObservacao.setText(compra.getObservacao());

            // Itens
            ArrayList<Itemcompra> itens = new ArrayList();
            for (Itemcompra item : compra.getItemcompraCollection()) {
                itens.add(item);
            }
            this.modelItens = new jtmItensCompra(itens);
            tblItens.setModel(this.modelItens);

            atualizaSubtotal();
            atualizaTotal();

            tabAbas.setSelectedIndex(0);
            setEditando(true);
            focus();
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tfdDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdDescontoFocusLost
        atualizaTotal();
    }//GEN-LAST:event_tfdDescontoFocusLost

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        dao = new GenericDAO();
        compras = new ArrayList();

        compras = dao.consultarTodos("Compra");
        tblCompras.setModel(new jtmCompra(compras));
    }//GEN-LAST:event_btnPesquisarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brnPagamento;
    private javax.swing.ButtonGroup btgPaga;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnZoomComprador;
    private javax.swing.JButton btnZoomFornecedor;
    private javax.swing.JButton btnZoomProduto;
    private javax.swing.JComboBox<String> cbmStatus;
    private javax.swing.JFormattedTextField ffdData;
    private javax.swing.JFormattedTextField ffdQuantidade;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private de.javasoft.swing.JYTableScrollPane jYTableScrollPane1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalLiquido;
    private javax.swing.JPanel pnlCabecalho;
    private javax.swing.JPanel pnlCadastro;
    private javax.swing.JPanel pnlComplemento;
    private javax.swing.JPanel pnlConsulta;
    private javax.swing.JPanel pnlItens;
    private javax.swing.JRadioButton rbtPagaNao;
    private javax.swing.JRadioButton rbtPagaSim;
    private javax.swing.JTabbedPane tabAbas;
    private de.javasoft.swing.JYTable tblCompras;
    private javax.swing.JTable tblItens;
    private javax.swing.JTextField tfdCodigoPro;
    private javax.swing.JTextField tfdCompra;
    private javax.swing.JTextField tfdComprador;
    private apoio.MoedaFormatada tfdDesconto;
    private apoio.MoedaFormatada tfdDescontoUn;
    private javax.swing.JTextField tfdDescrDesc;
    private javax.swing.JTextField tfdFornecedor;
    private javax.swing.JTextField tfdObservacao;
    private apoio.MoedaFormatada tfdPrecoUn;
    private javax.swing.JTextField tfdProduto;
    private apoio.MoedaFormatada tfdSubtotal;
    // End of variables declaration//GEN-END:variables
}
